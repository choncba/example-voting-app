/*
LFS261
Jenkisnsfile del ejemplo de una app java Instavote - Parte Result App en NodeJS
Ahora configurado para compilar con una imahen de nodejs en lugar de instalar las herramientas en el host de jenkins
https://github.com/choncba/example-voting-app
*/
pipeline {
    // agent {
    //     docker{
    //         image 'node:8.16-alpine'
    //     }
    // }
    
    agent none

    stages {                                    // Defino las etapas
        stage('install-tool') {
            agent {
                docker{
                    image 'node:8.16-alpine'
                }
            }
            when{                               // Ejecuto en cualquier branch, pero
                changeset '**/result/**'        // Solo se ejecuta si hago cambios en la carpeta result
            }
            steps {                             // primera etapa, compilar
                echo 'Compiling result App...'
                dir('result'){                  // Cambio al directorio result
                    sh 'npm install'            // instalo nodejs
                }
            }
        }
        
        stage('test') {                         // Segunda etapa, test
            agent {
                docker{
                    image 'node:8.16-alpine'
                }
            }            
            when{
                changeset '**/result/**'        // Solo se ejecuta si hago cambios en la carpeta result
            }
            steps {
                echo 'Running Unit Tests on result App...'
                dir('result'){
                    sh 'npm install'
                    sh 'npm test'
                }
            }
        }

        stage('docker-package'){
            agent any 
            when{
                changeset '**/result/**'  
                //branch 'master'         
            }
            steps{
              echo 'Packaging result app with docker'
              script{
                docker.withRegistry('https://index.docker.io/v1/', 'dockerhublogin') {
                    def workerImage = docker.build("lrbono/result:v${env.BUILD_ID}", "./result")
                    workerImage.push()
                    workerImage.push("${env.BRANCH_NAME}")
                }
              }
            }
        }        
    }
}

